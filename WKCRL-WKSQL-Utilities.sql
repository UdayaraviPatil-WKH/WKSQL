USE [WKCLR]
GO
DROP TABLE IF EXISTS [SQL].[CommandLogs]
GO
DROP TABLE IF EXISTS [SQL].[Connections]
GO
DROP PROCEDURE IF EXISTS [CLR].[usp_ExecuteSqlScalar]
GO
DROP PROCEDURE IF EXISTS [CLR].[usp_ExecuteSqlNonQuery]
GO
DROP PROCEDURE IF EXISTS [CLR].[usp_ExecuteSqlCommand]
GO
DROP PROCEDURE IF EXISTS [SQL].[usp_TraceCommand]
GO
DROP PROCEDURE IF EXISTS [SQL].[usp_UpdateLastUsedConnection]
GO
DROP PROCEDURE IF EXISTS [SQL].[clrusp_ExecuteScalar]
GO
DROP PROCEDURE IF EXISTS [SQL].[usp_SaveConnection]
GO
DROP PROCEDURE IF EXISTS [SQL].[clrusp_ExecuteCommand]
GO
DROP PROCEDURE IF EXISTS [SQL].[clrusp_ExecuteNonQuery]
GO
DROP SCHEMA IF EXISTS [SQL]
GO
DROP SCHEMA IF EXISTS [CLR]
GO
DROP ASSEMBLY IF EXISTS [WKSQL]
GO
CREATE ASSEMBLY [WKSQL]
FROM 0x
WITH PERMISSION_SET = EXTERNAL_ACCESS
GO
CREATE SCHEMA [SQL]
GO
CREATE SCHEMA [CLR]
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [SQL].[clrusp_ExecuteCommand]
	@Application [nvarchar](128),
	@Server [nvarchar](128),
	@Database [nvarchar](128),
	@Command [nvarchar](max),
	@CommandTimeout [int],
	@CurrentContext [bit],
	@Exception [nvarchar](max) OUTPUT
WITH EXECUTE AS CALLER
AS
EXTERNAL NAME [WKSQL].[Command].[ExecuteCommand]
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [SQL].[clrusp_ExecuteNonQuery]
	@Application [nvarchar](128),
	@Server [nvarchar](128),
	@Database [nvarchar](128),
	@Command [nvarchar](max),
	@CommandTimeout [int],
	@CurrentContext [bit],
	@Exception [nvarchar](max) OUTPUT
WITH EXECUTE AS CALLER
AS
EXTERNAL NAME [WKSQL].[Command].[ExecuteNonQuery]
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [SQL].[clrusp_ExecuteScalar]
	@Application [nvarchar](128),
	@Server [nvarchar](128),
	@Database [nvarchar](128),
	@Command [nvarchar](max),
	@CommandTimeout [int],
	@CurrentContext [bit],
	@Result [nvarchar](max) OUTPUT,
	@Exception [nvarchar](max) OUTPUT
WITH EXECUTE AS CALLER
AS
EXTERNAL NAME [WKSQL].[Command].[ExecuteScalar]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [SQL].[CommandLogs](
	[LogID] [int] IDENTITY(1,1) NOT NULL,
	[Connection] [varchar](100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Command] [nvarchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CommandTimeout] [int] NOT NULL,
	[CurrentContext] [bit] NOT NULL,
	[StartTime] [datetime2](7) NOT NULL,
	[EndTime] [datetime2](7) NOT NULL,
	[UserName] [nvarchar](255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Exception] [nvarchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 CONSTRAINT [PK_CommandLogs] PRIMARY KEY CLUSTERED 
(
	[LogID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 90, DATA_COMPRESSION = PAGE) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [SQL].[Connections](
	[Connection] [varchar](100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[UpdatedDate] [datetime] NOT NULL,
	[LastUsedDate] [datetime] NOT NULL,
	[Description] [varchar](255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Application] [nvarchar](128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Server] [nvarchar](128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Database] [nvarchar](128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CommandTimeout] [int] NOT NULL,
	[CurrentContext] [bit] NOT NULL,
	[TraceCommands] [bit] NOT NULL,
	[TraceExceptions] [bit] NOT NULL,
	[TraceThreshold] [int] NOT NULL,
 CONSTRAINT [PK_Connections] PRIMARY KEY CLUSTERED 
(
	[Connection] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 90) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
SET ANSI_PADDING ON
GO
CREATE UNIQUE NONCLUSTERED INDEX [UIX_Connections] ON [SQL].[Connections]
(
	[Application] ASC,
	[Server] ASC,
	[Database] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [SQL].[CommandLogs]  WITH CHECK ADD  CONSTRAINT [FK_CommandLogs_Connections] FOREIGN KEY([Connection])
REFERENCES [SQL].[Connections] ([Connection])
ON DELETE CASCADE
GO
ALTER TABLE [SQL].[CommandLogs] CHECK CONSTRAINT [FK_CommandLogs_Connections]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	CREATED BY: UDAY
	CREATED DATE: 10/15/2025

	*** Used internally to trace commands executed ***
*/
CREATE PROCEDURE [SQL].[usp_TraceCommand]
(
	/*Connection name configured*/
	@Connection VARCHAR(100)
	/*Command executed*/
	,@Command NVARCHAR(MAX)
	/*Command Timeout used*/
	,@CommandTimeout INT
	/*Current context used*/
	,@CurrentContext BIT
	/*Command execution start time*/
	,@StartTime DATETIME2
	/*Exception if any*/
	,@Exception NVARCHAR(MAX)
)
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		INSERT INTO [SQL].[CommandLogs]
			   ([Connection]
			   ,[Command]
			   ,[CommandTimeout]
			   ,[CurrentContext]
			   ,[StartTime]
			   ,[EndTime]
			   ,[UserName]
			   ,[Exception])
		VALUES
			   (@Connection
			   ,@Command
			   ,@CommandTimeout
			   ,@CurrentContext
			   ,@StartTime
			   ,SYSDATETIME()
			   ,ISNULL(SUSER_NAME(), 'UNK')
			   ,@Exception)
	END TRY
	BEGIN CATCH
		-- SAFE TO IGNORE EXCEPTION
	END CATCH
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	CREATED BY: UDAY
	CREATED DATE: 10/15/2025

	*** Used internally to trace when a given connection was used ***
*/
CREATE PROCEDURE [SQL].[usp_UpdateLastUsedConnection]
(
	/*Connection name configured*/
	@Connection VARCHAR(100) 
)
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		UPDATE	A SET
				A.[LastUsedDate] = GETDATE()
		FROM	[SQL].[Connections] A WITH (ROWLOCK, UPDLOCK)
		WHERE	A.[Connection] = @Connection;
	END TRY
	BEGIN CATCH
		-- SAFE TO IGNORE EXCEPTION
	END CATCH
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	CREATED BY: UDAY
	CREATED DATE: 10/15/2025

	*** Use this to execute command that do not return results from SQL servers ***
*/
CREATE PROCEDURE [CLR].[usp_ExecuteSqlScalar]
(
	/*Connection name configured*/
	@Connection VARCHAR(100)
	/*TSQL Command or Stored Procedure with arguments*/
	,@Command NVARCHAR(MAX) 
	/*Command Timeout*/
	,@CommandTimeout INT = 60
	/*Outputs first row and first column value if command returns any result(s)*/
	,@Result NVARCHAR(MAX) OUTPUT
	/*Outputs exception if any; make sure to raise error if this is not null*/
	,@Exception NVARCHAR(MAX) OUTPUT
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Application NVARCHAR(128), @Server NVARCHAR(128)
			, @Database NVARCHAR(128), @CurrentContext BIT
			, @TraceCommands BIT, @TraceExceptions BIT
			, @TraceThreshold INT, @StartTime DATETIME2;

	SET @Result = NULL;

	---------------------------------------------------------------------------
	-- GET APPLICATION, SERVER AND DATABASE NAMES FROM SETTINGS TABLE
	---------------------------------------------------------------------------
	SELECT	@Application = A.[Application]
			,@Server = A.[Server]
			,@Database = A.[Database]
			,@CommandTimeout = ISNULL(@CommandTimeout, A.[CommandTimeout])
			,@CurrentContext = A.[CurrentContext]
			,@TraceCommands = A.[TraceCommands]
			,@TraceExceptions = A.[TraceExceptions]
			,@TraceThreshold = A.[TraceThreshold]
			,@StartTime = SYSDATETIME()
	FROM	[SQL].[Connections] A
	WHERE	A.[Connection] = @Connection;

	---------------------------------------------------------------------------
	-- GET APPLICATION, SERVER AND DATABASE NAMES FROM DICTIONARY TABLE
	---------------------------------------------------------------------------
	SELECT	@Application = A.[Application]
			,@Server = A.[Server]
			,@Database = A.[Database]
			,@CommandTimeout = ISNULL(@CommandTimeout, A.[CommandTimeout])
			,@CurrentContext = A.[CurrentContext]
	FROM	[SQL].[Connections] A
	WHERE	A.[Connection] = @Connection;

	---------------------------------------------------------------------------
	-- IF CONNECTION IS NOT CONFIGURED
	---------------------------------------------------------------------------
	IF @@ROWCOUNT = 0 OR @Application IS NULL
	BEGIN
		SET @Exception = ISNULL(@Connection, 'NULL') + ' connection is not configured';

		RETURN;
	END

	---------------------------------------------------------------------------
	-- UPDATE CONNECTION LAST USED
	---------------------------------------------------------------------------
	EXECUTE [SQL].[usp_UpdateLastUsedConnection] @Connection;

	---------------------------------------------------------------------------
	-- EXECUTE THE COMMAND
	---------------------------------------------------------------------------
	EXECUTE [SQL].[clrusp_ExecuteScalar] 
		@Application
		,@Server
		,@Database
		,@Command
		,@CommandTimeout
		,@CurrentContext
		,@Result OUTPUT
		,@Exception OUTPUT;

	---------------------------------------------------------------------------
	-- TRACE COMMAND EXECUTED
	-- 1. If TraceCommands is enabled then trace all commands
	-- 2. If TraceExceptions is enabled and there was an exception then trace
	-- 3. If command took over TraceThreshold seconds then also trace
	---------------------------------------------------------------------------
	IF @TraceCommands = 1 
		OR (@TraceExceptions = 1 AND @Exception IS NOT NULL)
		OR (@TraceThreshold > 0 AND DATEDIFF(SS, @StartTime, SYSDATETIME()) > @TraceThreshold) 
	BEGIN
		EXECUTE [SQL].[usp_TraceCommand] @Connection, @Command, @CommandTimeout, @CurrentContext, @StartTime, @Exception;
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	CREATED BY: UDAY
	CREATED DATE: 10/15/2025

	*** Use this to execute command that do not return results from SQL servers ***
*/
CREATE PROCEDURE [CLR].[usp_ExecuteSqlNonQuery]
(
	/*Connection name configured*/
	@Connection VARCHAR(100)
	/*TSQL Command or Stored Procedure with arguments*/
	,@Command NVARCHAR(MAX) 
	/*Command Timeout*/
	,@CommandTimeout INT = 60
	/*Outputs exception if any; make sure to raise error if this is not null*/
	,@Exception NVARCHAR(MAX) OUTPUT
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Application NVARCHAR(128), @Server NVARCHAR(128)
			, @Database NVARCHAR(128), @CurrentContext BIT
			, @TraceCommands BIT, @TraceExceptions BIT
			, @TraceThreshold INT, @StartTime DATETIME2;

	---------------------------------------------------------------------------
	-- GET APPLICATION, SERVER AND DATABASE NAMES FROM SETTINGS TABLE
	---------------------------------------------------------------------------
	SELECT	@Application = A.[Application]
			,@Server = A.[Server]
			,@Database = A.[Database]
			,@CommandTimeout = ISNULL(@CommandTimeout, A.[CommandTimeout])
			,@CurrentContext = A.[CurrentContext]
			,@TraceCommands = A.[TraceCommands]
			,@TraceExceptions = A.[TraceExceptions]
			,@TraceThreshold = A.[TraceThreshold]
			,@StartTime = SYSDATETIME()
	FROM	[SQL].[Connections] A
	WHERE	A.[Connection] = @Connection;

	---------------------------------------------------------------------------
	-- IF CONNECTION IS NOT CONFIGURED
	---------------------------------------------------------------------------
	IF @@ROWCOUNT = 0 OR @Application IS NULL
	BEGIN
		SET @Exception = ISNULL(@Connection, 'NULL') + ' connection is not configured';

		RETURN;
	END

	---------------------------------------------------------------------------
	-- UPDATE CONNECTION LAST USED
	---------------------------------------------------------------------------
	EXECUTE [SQL].[usp_UpdateLastUsedConnection] @Connection;

	---------------------------------------------------------------------------
	-- EXECUTE THE COMMAND
	---------------------------------------------------------------------------
	EXECUTE [SQL].[clrusp_ExecuteNonQuery] 
		@Application
		,@Server
		,@Database
		,@Command
		,@CommandTimeout
		,@CurrentContext
		,@Exception OUTPUT;

	---------------------------------------------------------------------------
	-- TRACE COMMAND EXECUTED
	-- 1. If TraceCommands is enabled then trace all commands
	-- 2. If TraceExceptions is enabled and there was an exception then trace
	-- 3. If command took over TraceThreshold seconds then also trace
	---------------------------------------------------------------------------
	IF @TraceCommands = 1 
		OR (@TraceExceptions = 1 AND @Exception IS NOT NULL)
		OR (@TraceThreshold > 0 AND DATEDIFF(SS, @StartTime, SYSDATETIME()) > @TraceThreshold) 
	BEGIN
		EXECUTE [SQL].[usp_TraceCommand] @Connection, @Command, @CommandTimeout, @CurrentContext, @StartTime, @Exception;
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	CREATED BY: UDAY
	CREATED DATE: 10/15/2025

	*** Use this to execute command and get results from SQL servers ***
*/
CREATE PROCEDURE [CLR].[usp_ExecuteSqlCommand]
(
	/*Connection name configured*/
	@Connection VARCHAR(100)
	/*TSQL Command or Stored Procedure with arguments*/
	,@Command NVARCHAR(MAX) 
	/*Command Timeout*/
	,@CommandTimeout INT = 60
	/*Outputs exception if any; make sure to raise error if this is not null*/
	,@Exception NVARCHAR(MAX) OUTPUT
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Application NVARCHAR(128), @Server NVARCHAR(128)
			, @Database NVARCHAR(128), @CurrentContext BIT
			, @TraceCommands BIT, @TraceExceptions BIT
			, @TraceThreshold INT, @StartTime DATETIME2;

	---------------------------------------------------------------------------
	-- GET APPLICATION, SERVER AND DATABASE NAMES FROM SETTINGS TABLE
	---------------------------------------------------------------------------
	SELECT	@Application = A.[Application]
			,@Server = A.[Server]
			,@Database = A.[Database]
			,@CommandTimeout = ISNULL(@CommandTimeout, A.[CommandTimeout])
			,@CurrentContext = A.[CurrentContext]
			,@TraceCommands = A.[TraceCommands]
			,@TraceExceptions = A.[TraceExceptions]
			,@TraceThreshold = A.[TraceThreshold]
			,@StartTime = SYSDATETIME()
	FROM	[SQL].[Connections] A
	WHERE	A.[Connection] = @Connection;

	---------------------------------------------------------------------------
	-- IF CONNECTION IS NOT CONFIGURED
	---------------------------------------------------------------------------
	IF @@ROWCOUNT = 0 OR @Application IS NULL
	BEGIN
		SET @Exception = ISNULL(@Connection, 'NULL') + ' connection is not configured';

		RETURN;
	END

	---------------------------------------------------------------------------
	-- UPDATE CONNECTION LAST USED
	---------------------------------------------------------------------------
	EXECUTE [SQL].[usp_UpdateLastUsedConnection] @Connection;

	---------------------------------------------------------------------------
	-- EXECUTE THE COMMAND
	---------------------------------------------------------------------------
	EXECUTE [SQL].[clrusp_ExecuteCommand] 
		@Application
		,@Server
		,@Database
		,@Command
		,@CommandTimeout
		,@CurrentContext
		,@Exception OUTPUT;

	---------------------------------------------------------------------------
	-- TRACE COMMAND EXECUTED
	-- 1. If TraceCommands is enabled then trace all commands
	-- 2. If TraceExceptions is enabled and there was an exception then trace
	-- 3. If command took over TraceThreshold seconds then also trace
	---------------------------------------------------------------------------
	IF @TraceCommands = 1 
		OR (@TraceExceptions = 1 AND @Exception IS NOT NULL)
		OR (@TraceThreshold > 0 AND DATEDIFF(SS, @StartTime, SYSDATETIME()) > @TraceThreshold) 
	BEGIN
		EXECUTE [SQL].[usp_TraceCommand] @Connection, @Command, @CommandTimeout, @CurrentContext, @StartTime, @Exception;
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	CREATED BY: UDAY
	CREATED DATE: 10/15/2025

	*** Use this to save connection settings ***
*/
CREATE PROCEDURE [SQL].[usp_SaveConnection]
(
	/*Unique Connection Name*/
	@Connection VARCHAR(100)
	/*Connection Description*/
	,@Description VARCHAR(255)
	/*Application Name*/
	,@Application NVARCHAR(128)
	/*SQL Server Name*/
	,@Server NVARCHAR(128)
	/*SQL Database Name*/
	,@Database NVARCHAR(128)
	/*Default Command Timeout*/
	,@CommandTimeout INT = 60
	/*Whether to use current user security context or not*/
	,@CurrentContext BIT = 1
	/*Whether to trace commands or not*/
	,@TraceCommands BIT = 0
	/*Whether to trace exceptions or not*/
	,@TraceExceptions BIT = 0
	/*Trace threshold if command takes beyond these many seconds then trace*/
	,@TraceThreshold INT = 1200
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @CurrentTime DATETIME = GETDATE(), @Command NVARCHAR(500), @Result NVARCHAR(MAX), @Exception NVARCHAR(MAX);

	---------------------------------------------------------------------------
	-- VALIDATE CONNECTION NAME
	---------------------------------------------------------------------------
	IF ISNULL(@Connection, N'') = N''
	BEGIN
		RAISERROR(N'Invalid @Connection passed', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- VALIDATE DESCRIPTION NAME
	---------------------------------------------------------------------------
	IF ISNULL(@Description, N'') = N''
	BEGIN
		RAISERROR(N'Invalid @Description passed', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- VALIDATE APPLICATION NAME
	---------------------------------------------------------------------------
	IF ISNULL(@Application, N'') = N'' OR CHARINDEX(N'=', @Application) > 0 OR CHARINDEX(N';', @Application) > 0
	BEGIN
		RAISERROR(N'Invalid @Application passed', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- VALIDATE SERVER NAME
	---------------------------------------------------------------------------
	IF ISNULL(@Server, N'') = N'' OR CHARINDEX(N'=', @Server) > 0 OR CHARINDEX(N';', @Server) > 0
	BEGIN
		RAISERROR(N'Invalid @Server passed', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- VALIDATE DATABASE NAME
	---------------------------------------------------------------------------
	IF ISNULL(@Database, N'') = N'' OR CHARINDEX(N'=', @Database) > 0 OR CHARINDEX(N';', @Database) > 0
	BEGIN
		RAISERROR(N'Invalid @Database passed', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- CHECK FOR DUPLICATE CONNECTION
	---------------------------------------------------------------------------
	IF EXISTS (
		SELECT	1/0 
		FROM	[SQL].[Connections] 
		WHERE	[Application] = @Application 
				AND [Server] = @Server
				AND [Database] = @Database
				AND [Connection] <> @Connection
	)
	BEGIN
		RAISERROR(N'There is already a connection configured for same application, server and database. Please use the existing connection.', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- USE DEFAULT SETTINGS IF PASSED AS NULL
	---------------------------------------------------------------------------
	IF @CommandTimeout IS NULL
	BEGIN
		SET @CommandTimeout = 60;
	END

	IF @CurrentContext IS NULL
	BEGIN
		SET @CurrentContext = 1;
	END

	IF @TraceCommands IS NULL
	BEGIN
		SET @TraceCommands = 0;
	END

	IF @TraceExceptions IS NULL
	BEGIN
		SET @TraceExceptions = 0
	END

	IF @TraceThreshold IS NULL
	BEGIN
		SET @TraceThreshold = 1200;
	END

	---------------------------------------------------------------------------
	-- TEST QUICKLY IF IT WORKS BEFORE SAVING
	---------------------------------------------------------------------------
	SET @Command = N'SELECT SUSER_NAME();';

	EXECUTE [SQL].[clrusp_ExecuteScalar] 
		@Application
		,@Server
		,@Database
		,@Command
		,@CommandTimeout
		,@CurrentContext
		,@Result OUTPUT
		,@Exception OUTPUT;

	---------------------------------------------------------------------------
	-- IF ANY EXCEPTION FROM CLR PROCEDURE CALL RAISE THAT
	---------------------------------------------------------------------------
	IF @Exception IS NOT NULL
	BEGIN
		RAISERROR(@Exception, 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- VALIDATE RESULT
	---------------------------------------------------------------------------
	IF ISNULL(@Result, N'') = N''
	BEGIN
		RAISERROR(N'Connection test failed. Please contact DBA team.', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- IF USING CURRENT CONTEXT THEN RESULT SHOULD MATCH WITH LOCAL SUSER_NAME
	---------------------------------------------------------------------------
	IF @CurrentContext = 1 AND @Result <> SUSER_NAME()
	BEGIN
		RAISERROR(N'Connection security test failed. Please contact DBA team.', 11, 1) WITH NOWAIT;

		RETURN;
	END

	---------------------------------------------------------------------------
	-- SAVE CONNECTION
	---------------------------------------------------------------------------
	BEGIN TRY
		BEGIN TRANSACTION;

		UPDATE A SET
				A.[UpdatedDate] = @CurrentTime
				,A.[LastUsedDate] = @CurrentTime
				,A.[Description] = @Description
				,A.[Application] = @Application
				,A.[Server] = @Server
				,A.[Database] = @Database
				,A.[CommandTimeout] = @CommandTimeout
				,A.[CurrentContext] = @CurrentContext
				,A.[TraceCommands] = @TraceCommands
				,A.[TraceExceptions] = @TraceExceptions
				,A.[TraceThreshold] = @TraceThreshold
		FROM	[SQL].[Connections] A WITH (ROWLOCK, UPDLOCK)
		WHERE	A.[Connection] = @Connection;

		IF @@ROWCOUNT = 0
		BEGIN
			INSERT INTO [SQL].[Connections]
					([Connection]
					,[CreatedDate]
					,[UpdatedDate]
					,[LastUsedDate]
					,[Description]
					,[Application]
					,[Server]
					,[Database]
					,[CommandTimeout]
					,[CurrentContext]
					,[TraceCommands]
					,[TraceExceptions]
					,[TraceThreshold])
			SELECT	[Connection] = @Connection
					,[CreatedDate] = @CurrentTime
					,[UpdatedDate] = @CurrentTime
					,[LastUsedDate] = @CurrentTime
					,[Description] = @Description
					,[Application] = @Application
					,[Server] = @Server
					,[Database] = @Database
					,[CommandTimeout] = @CommandTimeout
					,[CurrentContext] = @CurrentContext
					,[TraceCommands] = @TraceCommands
					,[TraceExceptions] = @TraceExceptions
					,[TraceThreshold] = @TraceThreshold;
		END
		
		COMMIT TRANSACTION;
	END TRY
	BEGIN CATCH
		IF XACT_STATE() <> 0
		BEGIN
			ROLLBACK TRANSACTION;
		END

		SET @Exception = N'Failed to save connection. Error : #' + CAST(ERROR_NUMBER() AS VARCHAR(11)) + ' - ' + ISNULL(ERROR_MESSAGE(), 'UNKNOWN');
	END CATCH

	---------------------------------------------------------------------------
	-- RAISE EXCEPTION IF ANY
	---------------------------------------------------------------------------
	IF @Exception IS NOT NULL
	BEGIN
		RAISERROR(@Exception, 11, 1) WITH NOWAIT;
	END
END
GO
